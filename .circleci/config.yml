version: 2
jobs:
  release:
    docker:
      - image: circleci/node:10.15.3

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Config NPM
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run:
          name: Install dependencies
          command: yarn
      - run: 
          name: Config git
          command: |
            git config --global user.email "jason.brown.delta@gmail.com"
            git config --global user.name "jjaybrown" 
      - run: git reset --hard HEAD
      - run: 
          name: Release updated packages
          command: yarn run publish 
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
          
  build-release-image:
    machine:
      docker_layer_caching: true
    working_directory: ~/repo
    steps:
      - checkout
      - run: 
          name: Login to docker hub
          command: docker login -u $DOCKER_USERNAME --password $DOCKER_PASSWORD
      - run:
          name: Build docker image
          command: |
            cd packages/platform
            docker build -t spherehq/platform . --build-arg NPM_TOKEN=$NPM_TOKEN
            docker push spherehq/platform

  release-to-aws:
    docker:
      - image: spherehq/platform:latest
    working_directory: /usr/platform
    steps: 
      - run:
          name: Build Platform
          command: yarn build
      - run:
          name: Sync to AWS S3
          command: |
            aws configure set default.s3.max_concurrent_requests 20
            aws configure set default.s3.max_queue_size 10000
            aws configure set default.s3.multipart_threshold 64MB
            aws configure set default.s3.multipart_chunksize 16MB
            aws s3 sync public $BUCKET_NAME --acl public-read --delete --no-progress --only-show-errors --cache-control max-age=31536000
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
  database-schema-dry-run:
    docker:
      - image: circleci/node:10.15.3

    working_directory: ~/repo/packages/database

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Dry run database migration
          command: yarn deploy --dry-run
  migrate-database-schema:
    docker:
      - image: circleci/node:10.15.3

    working_directory: ~/repo/packages/database

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Run database migration
          command: yarn deploy
            
workflows:
  version: 2
  release-packages:
    jobs:
      - release:
          filters:
            branches:
              only: master
  build-and-release-platform:
    jobs:
      - build-release-image:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /@spherehq\/platform@[0-9]+.[0-9]+.[0-9]+/
      - release-to-aws:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /@spherehq\/platform@[0-9]+.[0-9]+.[0-9]+/
          requires: 
            - build-release-image
  # build-and-release-database:
  #   jobs:
  #     - database-schema-dry-run:
  #         filters:
  #             branches:
  #               ignore: /.*/
  #             tags:
  #               only: /@spherehq\/database@[0-9]+.[0-9]+.[0-9]+/
  #     - migrate-database-schema:
  #         type: approval
  #         requires:
  #           - database-schema-dry-run
  #         filters:
  #           branches:
  #             ignore: /.*/
  #           tags:
  #             only: /@spherehq\/database@[0-9]+.[0-9]+.[0-9]+/

