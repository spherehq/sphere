apiVersion: apps/v1
kind: Deployment
metadata:
  name: imgproxy-deployment
  namespace: sphere
  labels:
    stage: production
    app: imgproxy
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      stage: production
      app: imgproxy
  template:
    metadata:
      labels:
        stage: production
        app: imgproxy
    spec:
      containers:
      - name: imgproxy
        image: darthsim/imgproxy:latest
        ports:
        - containerPort: 8080
        envFrom:
          - configMapRef:
              name: imgproxy-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: imgproxy-config
  namespace: sphere
data:
  IMGPROXY_TTL: "3600"
  IMGPROXY_JPEG_PROGRESSIVE: "true"
  IMGPROXY_PNG_INTERLACED: "true"
  IMGPROXY_ENABLE_WEBP_DETECTION: "true"
  IMGPROXY_ENFORCE_WEBP: "true"
  IMGPROXY_USE_S3: "true"
  IMGPROXY_S3_ENDPOINT: "https://cdn.sphere.sh/media"

---
apiVersion: v1
kind: Service
metadata:
  name: imgproxy-service
  namespace: sphere
  labels:
    stage: production
    app: imgproxy
spec:
  type: NodePort
  selector:
    stage: production
    app: imgproxy
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  name: imgproxy-ingress
  namespace: sphere
spec:
  rules:
  - host: media.sphere.sh
    http:
      paths:
      - backend:
          serviceName: imgproxy-service
          servicePort: 80