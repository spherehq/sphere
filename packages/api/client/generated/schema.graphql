type Account {
  id: ID!
  status: AccountStatus!
  firstName: String!
  lastName: String!
  emailAddress: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  spheres(
    where: SphereWhereInput
    orderBy: SphereOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Sphere!]
  posts(
    where: PostWhereInput
    orderBy: PostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Post!]
}

enum AccountStatus {
  VERIFIED
  ACTIVE
  INACTIVE
}

input AccountWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  status: AccountStatus
  status_not: AccountStatus
  status_in: [AccountStatus!]
  status_not_in: [AccountStatus!]
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  emailAddress: String
  emailAddress_not: String
  emailAddress_in: [String!]
  emailAddress_not_in: [String!]
  emailAddress_lt: String
  emailAddress_lte: String
  emailAddress_gt: String
  emailAddress_gte: String
  emailAddress_contains: String
  emailAddress_not_contains: String
  emailAddress_starts_with: String
  emailAddress_not_starts_with: String
  emailAddress_ends_with: String
  emailAddress_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  spheres_every: SphereWhereInput
  spheres_some: SphereWhereInput
  spheres_none: SphereWhereInput
  posts_every: PostWhereInput
  posts_some: PostWhereInput
  posts_none: PostWhereInput
  AND: [AccountWhereInput!]
  OR: [AccountWhereInput!]
  NOT: [AccountWhereInput!]
}

input AccountWhereUniqueInput {
  id: ID
  emailAddress: String
}

scalar DateTime

scalar Json

type Media {
  id: ID!
  url: String!
  type: MEDIA_TYPE!
}

enum MEDIA_TYPE {
  IMAGE
}

enum MediaOrderByInput {
  id_ASC
  id_DESC
  url_ASC
  url_DESC
  type_ASC
  type_DESC
}

input MediaWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  type: MEDIA_TYPE
  type_not: MEDIA_TYPE
  type_in: [MEDIA_TYPE!]
  type_not_in: [MEDIA_TYPE!]
  AND: [MediaWhereInput!]
  OR: [MediaWhereInput!]
  NOT: [MediaWhereInput!]
}

type Mutation {
  mediaUpload(file: Upload!): Media
}

type Post {
  id: ID!
  title: String!
  featuredImage: Media
  content: Json!
  images(
    where: MediaWhereInput
    orderBy: MediaOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Media!]
  slug: String!
  timeToRead: Int!
  isPublished: Boolean!
  publishedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  status: POST_STATUS!
  author: Account!
  metadata: PostMetadata!
  associatedWith: Sphere!
}

enum POST_STATUS {
  PUBLISHED
  DRAFT
  ARCHIVED
  SYNCING
}

type PostMetadata {
  id: ID!
  fileHash: String!
  filename: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input PostMetadataWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  fileHash: String
  fileHash_not: String
  fileHash_in: [String!]
  fileHash_not_in: [String!]
  fileHash_lt: String
  fileHash_lte: String
  fileHash_gt: String
  fileHash_gte: String
  fileHash_contains: String
  fileHash_not_contains: String
  fileHash_starts_with: String
  fileHash_not_starts_with: String
  fileHash_ends_with: String
  fileHash_not_ends_with: String
  filename: String
  filename_not: String
  filename_in: [String!]
  filename_not_in: [String!]
  filename_lt: String
  filename_lte: String
  filename_gt: String
  filename_gte: String
  filename_contains: String
  filename_not_contains: String
  filename_starts_with: String
  filename_not_starts_with: String
  filename_ends_with: String
  filename_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [PostMetadataWhereInput!]
  OR: [PostMetadataWhereInput!]
  NOT: [PostMetadataWhereInput!]
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  slug_ASC
  slug_DESC
  timeToRead_ASC
  timeToRead_DESC
  isPublished_ASC
  isPublished_DESC
  publishedAt_ASC
  publishedAt_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  status_ASC
  status_DESC
}

input PostWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  featuredImage: MediaWhereInput
  images_every: MediaWhereInput
  images_some: MediaWhereInput
  images_none: MediaWhereInput
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  timeToRead: Int
  timeToRead_not: Int
  timeToRead_in: [Int!]
  timeToRead_not_in: [Int!]
  timeToRead_lt: Int
  timeToRead_lte: Int
  timeToRead_gt: Int
  timeToRead_gte: Int
  isPublished: Boolean
  isPublished_not: Boolean
  publishedAt: DateTime
  publishedAt_not: DateTime
  publishedAt_in: [DateTime!]
  publishedAt_not_in: [DateTime!]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  status: POST_STATUS
  status_not: POST_STATUS
  status_in: [POST_STATUS!]
  status_not_in: [POST_STATUS!]
  author: AccountWhereInput
  metadata: PostMetadataWhereInput
  associatedWith: SphereWhereInput
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
}

input PostWhereUniqueInput {
  id: ID
  slug: String
}

type Query {
  posts(
    where: PostWhereInput
    orderBy: PostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Post]!
  post(where: PostWhereUniqueInput!): Post
  spheres(
    where: SphereWhereInput
    orderBy: SphereOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Sphere]!
  sphere(where: SphereWhereUniqueInput!): Sphere
  account(where: AccountWhereUniqueInput!): Account
}

type Sphere {
  id: ID!
  alias: String!
  aliasSlug: String!
  slugPrefix: String!
  associatedWith: Account!
  createdAt: DateTime!
  updatedAt: DateTime!
  posts(
    where: PostWhereInput
    orderBy: PostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Post!]
}

enum SphereOrderByInput {
  id_ASC
  id_DESC
  alias_ASC
  alias_DESC
  aliasSlug_ASC
  aliasSlug_DESC
  slugPrefix_ASC
  slugPrefix_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input SphereWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  alias: String
  alias_not: String
  alias_in: [String!]
  alias_not_in: [String!]
  alias_lt: String
  alias_lte: String
  alias_gt: String
  alias_gte: String
  alias_contains: String
  alias_not_contains: String
  alias_starts_with: String
  alias_not_starts_with: String
  alias_ends_with: String
  alias_not_ends_with: String
  aliasSlug: String
  aliasSlug_not: String
  aliasSlug_in: [String!]
  aliasSlug_not_in: [String!]
  aliasSlug_lt: String
  aliasSlug_lte: String
  aliasSlug_gt: String
  aliasSlug_gte: String
  aliasSlug_contains: String
  aliasSlug_not_contains: String
  aliasSlug_starts_with: String
  aliasSlug_not_starts_with: String
  aliasSlug_ends_with: String
  aliasSlug_not_ends_with: String
  slugPrefix: String
  slugPrefix_not: String
  slugPrefix_in: [String!]
  slugPrefix_not_in: [String!]
  slugPrefix_lt: String
  slugPrefix_lte: String
  slugPrefix_gt: String
  slugPrefix_gte: String
  slugPrefix_contains: String
  slugPrefix_not_contains: String
  slugPrefix_starts_with: String
  slugPrefix_not_starts_with: String
  slugPrefix_ends_with: String
  slugPrefix_not_ends_with: String
  associatedWith: AccountWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  posts_every: PostWhereInput
  posts_some: PostWhereInput
  posts_none: PostWhereInput
  AND: [SphereWhereInput!]
  OR: [SphereWhereInput!]
  NOT: [SphereWhereInput!]
}

input SphereWhereUniqueInput {
  id: ID
  alias: String
  aliasSlug: String
}

scalar Upload
