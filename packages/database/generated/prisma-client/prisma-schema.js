'use strict'
exports.__esModule = true
exports.typeDefs =
  'type AggregatePost {\n  count: Int!\n}\n\ntype AggregatePostMetadata {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\nscalar Json\n\nscalar Long\n\ntype Mutation {\n  createPost(data: PostCreateInput!): Post!\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n  createPostMetadata(data: PostMetadataCreateInput!): PostMetadata!\n  updateManyPostMetadatas(data: PostMetadataUpdateManyMutationInput!, where: PostMetadataWhereInput): BatchPayload!\n  deleteManyPostMetadatas(where: PostMetadataWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Post {\n  id: ID!\n  title: String!\n  content: Json!\n  slug: String!\n  timeToRead: Int!\n  isPublished: Boolean!\n  publishedAt: DateTime\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  status: POST_STATUS!\n  metadata: PostMetadata!\n}\n\nenum POST_STATUS {\n  PUBLISHED\n  DRAFT\n  ARCHIVED\n  SYNCING\n}\n\ntype PostConnection {\n  pageInfo: PageInfo!\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  title: String!\n  content: Json!\n  slug: String!\n  timeToRead: Int\n  isPublished: Boolean\n  publishedAt: DateTime\n  status: POST_STATUS\n  metadata: PostMetadataCreateOneInput!\n}\n\ntype PostEdge {\n  node: Post!\n  cursor: String!\n}\n\ntype PostMetadata {\n  fileHash: String!\n  filename: String\n}\n\ntype PostMetadataConnection {\n  pageInfo: PageInfo!\n  edges: [PostMetadataEdge]!\n  aggregate: AggregatePostMetadata!\n}\n\ninput PostMetadataCreateInput {\n  fileHash: String!\n  filename: String\n}\n\ninput PostMetadataCreateOneInput {\n  create: PostMetadataCreateInput\n}\n\ntype PostMetadataEdge {\n  node: PostMetadata!\n  cursor: String!\n}\n\nenum PostMetadataOrderByInput {\n  fileHash_ASC\n  fileHash_DESC\n  filename_ASC\n  filename_DESC\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PostMetadataPreviousValues {\n  fileHash: String!\n  filename: String\n}\n\ntype PostMetadataSubscriptionPayload {\n  mutation: MutationType!\n  node: PostMetadata\n  updatedFields: [String!]\n  previousValues: PostMetadataPreviousValues\n}\n\ninput PostMetadataSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PostMetadataWhereInput\n  AND: [PostMetadataSubscriptionWhereInput!]\n  OR: [PostMetadataSubscriptionWhereInput!]\n  NOT: [PostMetadataSubscriptionWhereInput!]\n}\n\ninput PostMetadataUpdateDataInput {\n  fileHash: String\n  filename: String\n}\n\ninput PostMetadataUpdateManyMutationInput {\n  fileHash: String\n  filename: String\n}\n\ninput PostMetadataUpdateOneRequiredInput {\n  create: PostMetadataCreateInput\n  update: PostMetadataUpdateDataInput\n  upsert: PostMetadataUpsertNestedInput\n}\n\ninput PostMetadataUpsertNestedInput {\n  update: PostMetadataUpdateDataInput!\n  create: PostMetadataCreateInput!\n}\n\ninput PostMetadataWhereInput {\n  fileHash: String\n  fileHash_not: String\n  fileHash_in: [String!]\n  fileHash_not_in: [String!]\n  fileHash_lt: String\n  fileHash_lte: String\n  fileHash_gt: String\n  fileHash_gte: String\n  fileHash_contains: String\n  fileHash_not_contains: String\n  fileHash_starts_with: String\n  fileHash_not_starts_with: String\n  fileHash_ends_with: String\n  fileHash_not_ends_with: String\n  filename: String\n  filename_not: String\n  filename_in: [String!]\n  filename_not_in: [String!]\n  filename_lt: String\n  filename_lte: String\n  filename_gt: String\n  filename_gte: String\n  filename_contains: String\n  filename_not_contains: String\n  filename_starts_with: String\n  filename_not_starts_with: String\n  filename_ends_with: String\n  filename_not_ends_with: String\n  AND: [PostMetadataWhereInput!]\n  OR: [PostMetadataWhereInput!]\n  NOT: [PostMetadataWhereInput!]\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  content_ASC\n  content_DESC\n  slug_ASC\n  slug_DESC\n  timeToRead_ASC\n  timeToRead_DESC\n  isPublished_ASC\n  isPublished_DESC\n  publishedAt_ASC\n  publishedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  status_ASC\n  status_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  title: String!\n  content: Json!\n  slug: String!\n  timeToRead: Int!\n  isPublished: Boolean!\n  publishedAt: DateTime\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  status: POST_STATUS!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n  AND: [PostSubscriptionWhereInput!]\n  OR: [PostSubscriptionWhereInput!]\n  NOT: [PostSubscriptionWhereInput!]\n}\n\ninput PostUpdateInput {\n  title: String\n  content: Json\n  slug: String\n  timeToRead: Int\n  isPublished: Boolean\n  publishedAt: DateTime\n  status: POST_STATUS\n  metadata: PostMetadataUpdateOneRequiredInput\n}\n\ninput PostUpdateManyMutationInput {\n  title: String\n  content: Json\n  slug: String\n  timeToRead: Int\n  isPublished: Boolean\n  publishedAt: DateTime\n  status: POST_STATUS\n}\n\ninput PostWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  slug: String\n  slug_not: String\n  slug_in: [String!]\n  slug_not_in: [String!]\n  slug_lt: String\n  slug_lte: String\n  slug_gt: String\n  slug_gte: String\n  slug_contains: String\n  slug_not_contains: String\n  slug_starts_with: String\n  slug_not_starts_with: String\n  slug_ends_with: String\n  slug_not_ends_with: String\n  timeToRead: Int\n  timeToRead_not: Int\n  timeToRead_in: [Int!]\n  timeToRead_not_in: [Int!]\n  timeToRead_lt: Int\n  timeToRead_lte: Int\n  timeToRead_gt: Int\n  timeToRead_gte: Int\n  isPublished: Boolean\n  isPublished_not: Boolean\n  publishedAt: DateTime\n  publishedAt_not: DateTime\n  publishedAt_in: [DateTime!]\n  publishedAt_not_in: [DateTime!]\n  publishedAt_lt: DateTime\n  publishedAt_lte: DateTime\n  publishedAt_gt: DateTime\n  publishedAt_gte: DateTime\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  status: POST_STATUS\n  status_not: POST_STATUS\n  status_in: [POST_STATUS!]\n  status_not_in: [POST_STATUS!]\n  metadata: PostMetadataWhereInput\n  AND: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  NOT: [PostWhereInput!]\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n  slug: String\n}\n\ntype Query {\n  post(where: PostWhereUniqueInput!): Post\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  postMetadatas(where: PostMetadataWhereInput, orderBy: PostMetadataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PostMetadata]!\n  postMetadatasConnection(where: PostMetadataWhereInput, orderBy: PostMetadataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostMetadataConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  postMetadata(where: PostMetadataSubscriptionWhereInput): PostMetadataSubscriptionPayload\n}\n'
//# sourceMappingURL=prisma-schema.js.map
