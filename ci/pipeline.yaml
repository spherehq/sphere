resource_types:
  - name: npm-cache
    type: registry-image
    source: 
      repository: ymedlop/npm-cache-resource

resources:
  - name: git
    type: git
    icon: github-circle
    source: &repo-source
      uri: git@github.com:spherehq/sphere.git
      private_key: ((SSH_PRIVATE_KEY))

  - name: git-tag-platform
    type: git
    icon: github-circle
    source: 
      <<: *repo-source 
      tag_filter: "@spherehq/platform@*[0-9].*[0-9].*[0-9]"
      disable_ci_skip: true

  - name: git-tag-database
    type: git
    icon: github-circle
    source: 
      <<: *repo-source 
      tag_filter: "@spherehq/database@*[0-9].*[0-9].*[0-9]"
      disable_ci_skip: true

  - name: npm-repo-cache
    type: npm-cache
    icon: npm
    source:
      <<: *repo-source 
      yarn-support: true
      paths:
        - package.json

  - name: docker-platform-image
    type: docker-image
    icon: docker
    source:
      repository: spherehq/platform
      username: ((DOCKER_USERNAME))
      password: ((DOCKER_PASSWORD))

jobs:
  - name: cache
    plan:
      - get: git
        trigger: true
      - get: npm-repo-cache 
    
  - name: publish-packages
    plan:
      - get: git
        trigger: true
        passed: [cache]
      - get: npm-repo-cache 
        passed: [cache] 
      - task: "Lerna Publish"
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: node
              tag: 10.16.0
          inputs:
            - name: git
              path: repo
            - name: npm-repo-cache
              path: /cache
          run: 
            path: /bin/sh
            args: 
              - -exc
              - |
                eval "$(ssh-agent -s)"
                echo "$SSH_PRIVATE_KEY" | ssh-add - > /dev/null
                mkdir ~/.ssh; chmod 700 ~/.ssh
                ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
                mv cache/node_modules repo/node_modules
                cd repo
                git checkout master
                git config --global user.email "$GH_EMAIL_ADDRESS"
                git config --global user.name "$GH_USERNAME" 
                echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
                yarn run publish
          params: 
            GH_TOKEN: ((GITHUB_TOKEN))
            GH_EMAIL_ADDRESS: ((GITHUB_EMAIL_ADDRESS))
            GH_USERNAME: ((GITHUB_USERNAME))
            SSH_PRIVATE_KEY: ((SSH_PRIVATE_KEY))
            NPM_TOKEN: ((NPM_TOKEN))

  - name: build-platform-image
    plan: 
      - get: git-tag-platform
        trigger: true
      - put: docker-platform-image
        params:
          build: ./git-tag-platform/packages/platform
          skip_download: true
          build_args:
            NPM_TOKEN: ((NPM_TOKEN))

  - name: build-and-release-platform-from-image
    plan: 
      - get: docker-platform-image
        passed: [build-platform-image]
        trigger: true
      - task: Build platform
        image: docker-platform-image
        config:
          platform: linux
          inputs:
            - name: docker-platform-image
              path: /
          run:
            path: yarn
            args: 
              - build
            dir: /rootfs/usr/platform
          outputs:
            - name: platform-build-artifact
              path: /rootfs/usr/platform/public
          params:
            PRISMA_ENDPOINT: ((PRISMA_ENDPOINT))
            SPHERE_GRAPHQL_ENDPOINT: ((SPHERE_GRAPHQL_ENDPOINT))
      - task: Release to AWS
        image: docker-platform-image
        config:
          platform: linux
          inputs:
            - name: platform-build-artifact
              path: public
          run: 
            path: /bin/sh
            args:
              - -exc
              - |
                pwd
                aws configure set default.s3.max_concurrent_requests 20
                aws configure set default.s3.max_queue_size 10000
                aws configure set default.s3.multipart_threshold 64MB
                aws configure set default.s3.multipart_chunksize 16MB
                aws s3 sync public s3://$BUCKET_NAME --acl public-read --delete --no-progress --only-show-errors --cache-control max-age=31536000
                aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
          params:
            CLOUDFRONT_DISTRIBUTION_ID: ((CLOUDFRONT_DISTRIBUTION_ID))
            AWS_ACCESS_KEY_ID: ((AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((AWS_SECRET_ACCESS_KEY))
            BUCKET_NAME: ((AWS_BUCKET_NAME))  

  - name: database-schema-dry-run
    plan: 
      - get: git-tag-database
        trigger: true
      - task: "Dry run database migration"
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: node
              tag: 10.16.0
          inputs:
            - name: git
              path: repo
            - name: npm-repo-cache
              path: /cache
          run: 
            path: /bin/sh
            args: 
              - -exc
              - |
                mv cache/node_modules repo/node_modules
                cd repo/packages/database
                yarn deploy --dry-run
      

            
